================================================================================
ΑΜΕΣΑ ΠΡΟΒΛΗΜΑΤΑ
================================================================================

*   Σε περιπτωσεις που το δικτυο πλυμμηριζει απο transactions, δεν υπαρχει καμια
    εγγυηση για την σειρα με την οποια αυτα φτανουν σε καθε node, οποτε ειναι
    αρκετα πιθανο transactions να `απορριπτονται` διοτι τα inputs τους δεν εχουν
    ακομα φτασει.

*   Το φαινομενο ειναι cascaded, αν ενα transaction αποτυχει, δεν δημιουργουνται
    ποτε τα outputs του, οποτε επομενα transactions θα αποτυχουν επισης (ακομα
    και αν αυτα ειναι valid). Επειδη καποιοι nodes τα λαμβανουν ορθα ενω αλλοι
    οχι, οι nodes αρχιζουν να εχουν αποκλινοντα sets απο transactions.


================================================================================
ΕΜΜΕΣΑ ΠΡΟΒΛΗΜΑΤΑ
================================================================================

*   Λογω των πανω, οταν καποιος node τρεχει τον αλγοριθμο consensus, για να
    κρατησει την μεγιστη αλυσιδα που θα βρει, και παρει την αλυσιδα καποιου
    κομβου με τον οποιο εχουν πολλα conflicting transactions, θα αποδεχτει αυτα
    που βρισκονται στο block (οπως και πρεπει), αλλα ως παρενεργεια θα απορριψει
    πολλα απο τα δικα του.

    Ως αποτελεσμα, παρατηρηθηκε κατα τις δοκιμες καποιοι κομβοι, μετα απο την
    υιοθεσια καποιας αλυσιδας, να πετουν ολα τα transactions τους, οποτε να
    μην συμμετεχουν καθολου στη διαδικασια του mining.


================================================================================
ΠΙΘΑΝΕΣ ΛΥΣΕΙΣ ΤΟΥ ΠΡΟΒΛΗΜΑΤΟΣ
================================================================================

*   Οι κομβοι κρατουν μια λιστα με `pending_for_approval` transactions, στην
    οποια προσθετουν οσα incoming transactions δεν εχουν ετοιμα ολα τα inputs
    τους, με την ευχη οτι αυτα θα ερθουν συντομα απο το δικτυο. Οταν καποιο νεο
    transaction φτανει, τοτε ελεγχονται και τα `pending_for_approval`. Αν τα
    inputs καποιου ειναι πλεον εγκυρα, προστιθεται στη λιστα των transactions
    για mining.

    ΑΡΝΗΤΙΚΑ: Περιπλοκη υλοποιηση για σωστη διαταξη των transactions, περιπλοκη
    υλοποιηση του consensus, ευκολα εκμεταλλευσιμο απο κακοβουλους χρηστες,
    μπορουν να γεμιζουν τους nodes με παρα πολλα ψευτικα transactions των οποιων
    τα inputs δε θα ερθουν ποτε.

*   Αν η αποστολη ενος transaction αποτυχει, τοτε κανε αλλες MAX_RETRIES
    προσπαθειες.

    ΑΡΝΗΤΙΚΑ: Το προβλημα δημιουργειται απο την τεραστια ελευση transactions
    στο δικτυο, και την εκτος σειρας ληψη τους. Αν σε περιπτωση αποτυχιας
    κανουμε και αλλες προσπαθειες, το αποτελεσμα ειναι η κινηση στο δικτυο
    να αυξηθει ακομα περισσοτερο, χωρις να εχουμε καποια εγγυηση για το
    αποτελεσμα.

*   Αν η ληψη ενος transaction αποτυχει, φτιαξε ενα worker thread που μας την
    στελνει ξανα μετα απο Χ δευτερολεπτα.

    ΑΡΝΗΤΙΚΑ: Δε βοηθαει σε cascading αποτυχιες, απαιτει ελεγχο για duplicates

*   Κατα τον αλγοριθμο του consensus, ζηταμε οχι μονο το blockchain του αλλου
    node αλλα και τη λιστα με τα pending transactions που διαθετει. Με καποιο
    τροπο, επιλεγουμε ποια απο αυτα θελουμε να υιοθετησουμε.

    ΑΡΝΗΤΙΚΑ: Περισσοτερο bandwidth, ο αλγοριθμος consensus καθυστερει ακομη
    περισσοτερο, στριφνη υλοποιηση σε κωδικα.
